generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Member {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String   @unique
  year       String
  department String
  createdAt  DateTime @default(now())
}

model Event {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  date        DateTime
  venue       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  individualRegistrations EventIndividualRegistration[]
  teamRegistrations      EventTeamRegistration[]
}

model EventIndividualRegistration {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  eventId       String   @db.ObjectId
  event         Event    @relation(fields: [eventId], references: [id])
  name          String
  studentNumber String
  department    String
  year          String
  createdAt     DateTime @default(now())
}

model EventTeamRegistration {
  id                       String            @id @default(auto()) @map("_id") @db.ObjectId
  eventId                  String            @db.ObjectId
  event                    Event             @relation(fields: [eventId], references: [id])
  groupLeader              String
  groupLeaderStudentNumber String
  department               String
  year                     String
  createdAt                DateTime          @default(now())
  members                  EventTeamMember[]
}

model EventTeamMember {
  id            String              @id @default(auto()) @map("_id") @db.ObjectId
  teamId        String              @db.ObjectId
  teamName      String
  name          String
  studentNumber String
  department    String
  year          String
  team          EventTeamRegistration @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model ServiceRegistration {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  department  String
  year        String
  service     String
  status      String?  @default("pending")
  createdAt   DateTime @default(now())
}
